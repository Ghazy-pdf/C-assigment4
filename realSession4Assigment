using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics.Metrics;
using System.Drawing;
using System.Reflection.Metadata;
using static System.Net.Mime.MediaTypeNames;
using static System.Runtime.InteropServices.JavaScript.JSType;

namespace Assigment4C_.NET
{
    internal class Program
    {
        static void Main(string[] args)
        {

            #region Arrays

            #region  1 - Write a program that allows the user to insert an integer then print all numbers between 1 to that number.


            //Console.Write("Enter a number : ");
            //int.TryParse(Console.ReadLine(), out int num);

            //for (int i = 1; i <= num; i++)
            //{
            //    Console.WriteLine(i);
            //}

            #endregion

            #region  2- Write a program that allows the user to insert an integer then print a multiplication table up to 12.

            //Console.Write("Enter the number you want it's timeTable : ");
            //int.TryParse(Console.ReadLine(), out int timeTableNum);

            //int number = timeTableNum;

            //Console.WriteLine(number);

            //for (int i = 0; i < 11; i++)
            //{

            //    Console.WriteLine(timeTableNum+=number);
            //}


            #endregion

            #region 3- Write a program that allows to user to insert number then print all even numbers between 1 to this number


            //Console.Write("Enter a number and i will print all the even numbers until this number : ");
            //int.TryParse(Console.ReadLine(), out int num);

            //for (int i = 1; i <= num; i++)
            //{
            //   if (i%2==0)
            //    Console.WriteLine(i);
            //}


            #endregion

            #region 4- Write a program that takes two integers then prints the power.

            //Console.Write("Enter the number then write the power after it : ");
            //double.TryParse(Console.ReadLine(), out double x);
            //double.TryParse(Console.ReadLine(), out double y);

            //double sum=1;

            //for (int i = 0; i < y; i++)
            //{
            //    sum *= x;
            //}

            //Console.WriteLine($"The power is {sum}");

            #endregion

            #region 5- Write a program to enter marks of five subjects and calculate total, average and percentage.

            //        Example
            //        Input: -Enter Marks of five subjects: 95 76 58 90 89
            //        Output: Total marks = 408
            //        Average Marks = 81
            //        Percentage = 81

            //Console.WriteLine ("Enter the marks of your 5 subjects : ");
            //double.TryParse(Console.ReadLine(), out double stdsub1);
            //double.TryParse(Console.ReadLine(), out double stdsub2);
            //double.TryParse(Console.ReadLine(), out double stdsub3);
            //double.TryParse(Console.ReadLine(), out double stdsub4);
            //double.TryParse(Console.ReadLine(), out double stdsub5);

            //double sum = stdsub1 + stdsub2 + stdsub3+ stdsub4 +stdsub5;
            //double avg = (stdsub1 + stdsub2 + stdsub3 + stdsub4 + stdsub5) / 5;
            //double per = (sum / 500) * 100;

            //Console.WriteLine($"The total marks = {sum}");
            //Console.WriteLine($"The average marks = {avg}");
            //Console.WriteLine($"The percentage  = {per} %");




            #endregion

            #region 6- Write a program to allow the user to enter a string and print the REVERSE of it.

            //Console.Write("Enter a string : ");

            //string word = Console.ReadLine() ?? " ";

            //string reversed = new string(word.Reverse().ToArray());

            //Console.WriteLine(reversed);

            #endregion

            #region 7- Write a program to allow the user to enter int and print the REVERSED of it.

            //Console.WriteLine("Enter a number : ");

            //int.TryParse(Console.ReadLine(), out int num);

            //int result=0;

            //while (num > 0) { 

            // int temp = num % 10;

            //    result = result * 10 + temp;

            //    num /= 10;

            //}

            //Console.WriteLine(result);


            #endregion

            #region 8- Write a program in C# Sharp to find prime numbers within a range of numbers.
            //            Test Data :
            //Input starting number of ranges: 1
            //Input ending number of range: 50

            //            Expected Output :
            //The prime number between 1 and 50 are:
            //            2 3 5 7 11 13 17 19 23 29 31 37 41 43 47



            //=============================================

            //Console.Write("Input starting number of range: ");
            //int.TryParse(Console.ReadLine(), out int fristnum);
            //Console.Write("Input ending number of range: ");
            //int.TryParse(Console.ReadLine(), out int lastnum);
            //Console.WriteLine($"The prime numbers between {fristnum} and {lastnum} are : ");
            //for (int n = fristnum; n <= lastnum; n++)
            //{
            //    bool isPrime = true;
            //    if (n < 2) isPrime = false;
            //    for (int j = 2; j <= n-1; j++)
            //    {
            //        if (n % j == 0) { isPrime = false; break; }
            //    }
            //    if (isPrime) Console.Write(n + " ");
            //}




            #endregion

            #region 9- . Write a program in C# Sharp to convert a decimal number into binary without using an array.
            //            Test Data :
            //Enter a number to convert: 25
            //Expected Output :
            //The Binary of 25 is 11001.





            //Console.Write("Enter a number to convert: ");
            //int.TryParse(Console.ReadLine(), out int num);
            //string binary = "";
            //int temp = num;
            //while (temp > 0)
            //{
            //    binary = (temp % 2) + binary;
            //    temp /= 2;
            //}
            //Console.WriteLine($"The Binary of {num} is {binary}.");




            #endregion

            #region 10- Create a program that asks the user to input three points (x1, y1), (x2, y2), and (x3, y3), and determines whether these points lie on a single straight line.


            //Console.Write("Enter x1: ");
            //double.TryParse(Console.ReadLine(), out double x1);
            //Console.Write("Enter y1: ");            
            //double.TryParse(Console.ReadLine(), out double y1);
            //Console.Write("Enter x2: ");            
            //double.TryParse(Console.ReadLine(), out double x2);
            //Console.Write("Enter y2: ");            
            //double.TryParse(Console.ReadLine(), out double y2);
            //Console.Write("Enter x3: ");            
            //double.TryParse(Console.ReadLine(), out double x3);
            //Console.Write("Enter y3: ");
            //double.TryParse(Console.ReadLine(), out double y3);

            //if ((y2 - y1) * (x3 - x1) == (y3 - y1) * (x2 - x1))
            //    Console.WriteLine("The points lie on the same straight line");
            //else
            //    Console.WriteLine("The points do not lie on the same straight line");


            #endregion

            #region 11- . Write a program that prints an identity matrix using for loop, in other words takes a value n from the user and shows the identity table of size n * n.

            //Console.Write("Enter n: ");
            //int.TryParse(Console.ReadLine(), out int n);
            //    for (int i = 0; i < n; i++)
            //{
            //    for (int j = 0; j < n; j++)
            //    {
            //        Console.Write(i == j ? "1 " : "0 ");
            //    }
            //    Console.WriteLine();
            //}


            #endregion

            #region 12- Write a program in C# Sharp to find the sum of all elements of the array.


            //int count;
            //Console.Write("Enter number of elements: ");
            //int.TryParse(Console.ReadLine(), out count);

            //int[] arr = new int[count];
            //int total_sum = 0;
            //for (int i = 0; i < count; i++)
            //{
            //    int.TryParse(Console.ReadLine(), out arr[i]);
            //    total_sum += arr[i];
            //}
            //Console.WriteLine("Sum of all elements: " + total_sum);

            #endregion

            #region 13- Write a program in C# Sharp to merge two arrays of the same size sorted in ascending order.

            //int size;
            //Console.Write("Enter size: ");
            //int.TryParse(Console.ReadLine(), out size);

            //Console.Write("Enter 2 arr elements: ");
            //int[] firstArr = new int[size];

            //int[] secondArr = new int[size];

            //for (int i = 0; i < size; i++) int.TryParse(Console.ReadLine(), out firstArr[i]);
            //for (int i = 0; i < size; i++) int.TryParse(Console.ReadLine(), out secondArr[i]);

            //int[] merged = new int[size * 2];
            //Array.Copy(firstArr, merged, size);
            //Array.Copy(secondArr, 0, merged, size, size);
            //Array.Sort(merged);

            //foreach (int val in merged) Console.Write(val + " ");

            #endregion

            #region 14- Write a program in C# Sharp to count the frequency of each element of an array.

            //int n;
            //Console.Write("Enter size: ");
            //int.TryParse(Console.ReadLine(), out n);

            //int[] nums = new int[n];
            //for (int i = 0; i < n; i++) int.TryParse(Console.ReadLine(), out nums[i]);

            //for (int i = 0; i < n; i++)
            //{
            //    int count = 1;
            //    if (nums[i] == -1) continue;
            //    for (int j = i + 1; j < n; j++)
            //    {
            //        if (nums[i] == nums[j]) { count++; nums[j] = -1; }
            //    }
            //    Console.WriteLine(nums[i] + " occurs " + count + " times");
            //}

            #endregion

            #region 15- Write a program in C# Sharp to find maximum and minimum element in an array

            //int s;
            //Console.Write("Enter size: ");
            //int.TryParse(Console.ReadLine(), out s);

            //int[] values = new int[s];
            //for (int i = 0; i < s; i++) 
            //    int.TryParse(Console.ReadLine(), out values[i]);

            //int max = values[0], min = values[0];
            //foreach (int val in values)
            //{
            //    if (val > max) max = val;
            //    if (val < min) min = val;
            //}
            //Console.WriteLine("Max: " + max + " Min: " + min);

            #endregion

            #region 16 - Write a program in C# Sharp to find the second largest element in an array.

            //int c;
            //Console.Write("Enter count: ");
            //int.TryParse(Console.ReadLine(), out c);

            //int[] numbers = new int[c];
            //for (int i = 0; i < c; i++)
            //int.TryParse(Console.ReadLine(), out numbers[i]);

            //Array.Sort(numbers);
            //Console.WriteLine("Second largest: " + numbers[c - 2]);

            #endregion

            #region 17-. Consider an Array of Integer values with size N, having values as    
            // in this Example

            //7
            //0
            //0
            //0
            //0
            //5
            //6
            //7
            //5
            //0
            //7
            //5
            //3


            // مش فاهم السوال ده 


            //write a program find the longest distance between Two equal cells.In this example.The distance is measured by the number Of cells- for example, the distance between the first and the fourth cell is 2(cell 2 and cell 3).

            //In the example above, the longest distance is between the first 7 and the
            //10th 7, with a distance of 8 cells, i.e.the number of cells between the 1st
            //And the 10th 7s.

            //Note:
            //-Array values will be taken from the user
            //-If you have input like 1111111 then the distance is the number of
            //Cells between the first and the last cell.


            #endregion

            #region 18- Given a list of space separated words, reverse the order of the words.

            //        Input: this is a test       Output: test a is this
            //Input: all your base        Output: base your all
            //Input: Word Output: Word
            //Note : 
            //Check the Split Function(Member in String Class) Output will be a Single Console.WriteLine Statement



            //string text = Console.ReadLine() ?? " ";
            //string[] parts = text.Split(' ');
            //Array.Reverse(parts);
            //Console.WriteLine(string.Join(" ", parts));

            #endregion

            #region 19- Write a program to create two multidimensional arrays of same size. Accept value from user and store them in first array. Now copy all the elements of first array on second array and print second array.

            //int rows, cols;
            //Console.Write("Enter rows: ");
            //int.TryParse(Console.ReadLine(), out rows);
            //Console.Write("Enter cols: ");
            //int.TryParse(Console.ReadLine(), out cols);

            //int[,] first = new int[rows, cols];
            //int[,] second = new int[rows, cols];

            //for (int i = 0; i < rows; i++)
            //    for (int j = 0; j < cols; j++)
            //        int.TryParse(Console.ReadLine(), out first[i, j]);

            //for (int i = 0; i < rows; i++)
            //    for (int j = 0; j < cols; j++)
            //        second[i, j] = first[i, j];

            //for (int i = 0; i < rows; i++)
            //{
            //    for (int j = 0; j < cols; j++) Console.Write(second[i, j] + " ");
            //    Console.WriteLine();
            //}

            #endregion

            #region 20- Write a Program to Print One Dimensional Array in Reverse Order

            //int len;
            //Console.Write("Enter length: ");
            //int.TryParse(Console.ReadLine(), out len);

            //int[] a = new int[len];
            //for (int i = 0; i < len; i++)
            //    int.TryParse(Console.ReadLine(), out a[i]);

            //for (int i = len - 1; i >= 0; i--) Console.Write(a[i] + " ");


            #endregion



            #endregion


            #region functions

            #region Explain the difference between passing (Value type parameters) by value and by reference then write a suitable c# example.


            //static void PassByValue(int x)
            //{
            //    x = 100;
            //}

            //static void PassByReference(ref int x)
            //{
            //    x = 100;
            //}

            //int num;

            //Console.Write("Enter an integer: ");
            //int.TryParse(Console.ReadLine(), out num);

            //Console.WriteLine($"Original value: {num}");

            //PassByValue(num);
            //Console.WriteLine($"After PassByValue: {num}");

            //PassByReference(ref num);
            //Console.WriteLine($"After PassByReference: {num}");


            #endregion

            #region Explain the difference between passing (Reference type parameters) by value and by reference then write a suitable c# example.




            #endregion

            #region Write a c# Function that accept 4 parameters from user and return result of summation and subtracting of two numbers


            //static (int sum, int subtract) SumAndSubtract(int a, int b)
            //{
            //    return (a + b, a - b);
            //}


            //int num1, num2;

            //Console.Write("Enter first number: ");
            //int.TryParse(Console.ReadLine(), out num1);

            //Console.Write("Enter second number: ");
            //int.TryParse(Console.ReadLine(), out num2);

            //var result = SumAndSubtract(num1, num2);

            //Console.WriteLine($"Sum: {result.sum}, Subtract: {result.subtract}");


            #endregion

            #region Write a program in C# Sharp to create a function to calculate the sum of the individual digits of a given number.



            //static int SumOfDigits(int number)
            //{
            //    int sum = 0;
            //    while (number != 0)
            //    {
            //        sum += number % 10;
            //        number /= 10;
            //    }
            //    return sum;
            //}



            //    int num;

            //    Console.Write("Enter a number: ");
            //    int.TryParse(Console.ReadLine(), out num);

            //    Console.WriteLine($"The sum of the digits of the number {num} is: {SumOfDigits(num)}");


            #endregion

            #region Create a function named "IsPrime", which receives an integer number and retuns true if it is prime, or false if it is not:

            //static bool IsPrime(int n)
            //{
            //    if (n < 2) return false;

            //    for (int j = 2; j <=n-1; j++)
            //    {
            //        if (n % j == 0) return false;
            //    }
            //    return true;
            //}


            //    int num;

            //    Console.Write("Enter a number: ");
            //    int.TryParse(Console.ReadLine(), out num);

            //    Console.WriteLine(IsPrime(num) ? "Prime" : "Not Prime");

            #endregion

            #region Create a function named MinMaxArray, to return the minimum and maximum values stored in an array, using reference parameters

            //static void MinMaxArray(int[] arr, out int min, out int max)
            //{
            //    min = arr[0];
            //    max = arr[0];

            //    foreach (int num in arr)
            //    {
            //        if (num < min) min = num;
            //        if (num > max) max = num;
            //    }
            //}


            //    int size;

            //    Console.Write("Enter array size: ");
            //    int.TryParse(Console.ReadLine(), out size);

            //    int[] numbers = new int[size];

            //    for (int i = 0; i < size; i++)
            //    {
            //        Console.Write($"Enter number {i + 1}: ");
            //        int.TryParse(Console.ReadLine(), out numbers[i]);
            //    }

            //    MinMaxArray(numbers, out int min, out int max);

            //    Console.WriteLine($"Min: {min}, Max: {max}");

            #endregion

            #region  Create an iterative(non - recursive) function to calculate the factorial of the number specified as parameter

            //static long Factorial(int n)
            //{
            //    long result = 1;
            //    for (int i = 2; i <= n; i++)
            //        result *= i;
            //    return result;
            //}

            //    int num;

            //    Console.Write("Enter a number: ");
            //    int.TryParse(Console.ReadLine(), out num);

            //Console.WriteLine($"Factorial of {num} is: {Factorial(num)}");
        
                #endregion

            #region Create a function named "ChangeChar" to modify a letter in a certain position (0 based) of a string, replacing it with a different letter



                #endregion


                #endregion
        
                
        }
    }
}
